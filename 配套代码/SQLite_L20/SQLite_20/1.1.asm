; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28117.0 

	TITLE	C:\Users\libit\source\repos\SQLite_20\SQLite_20\SQLite_20.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?index@@3HA					; index
_BSS	SEGMENT
?index@@3HA DD	01H DUP (?)				; index
_BSS	ENDS
CONST	SEGMENT
$SG5563	DB	'e_f: %d,%d,%d,%d,%d', 0aH, 00H
	ORG $+3
$SG5584	DB	'Hello World!', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?e_f@@YGHHHHH@Z					; e_f
PUBLIC	?c_f@@YAHHHHH@Z					; c_f
PUBLIC	?sqlite3_exec@@YAHHHP6AHHHHH@ZHH@Z		; sqlite3_exec
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; File C:\Users\libit\source\repos\SQLite_20\SQLite_20\SQLite_20.cpp
; Line 32
	push	ebp
	mov	ebp, esp
; Line 33
	push	OFFSET $SG5584
	call	_printf
	add	esp, 4
; Line 34
	push	0
	push	0
	push	OFFSET ?e_f@@YGHHHHH@Z			; e_f
	push	0
	push	0
	call	?sqlite3_exec@@YAHHHP6AHHHHH@ZHH@Z	; sqlite3_exec
	add	esp, 20					; 00000014H
; Line 35
	xor	eax, eax
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_db$ = 8						; size = 4
_sql$ = 12						; size = 4
_callback$ = 16						; size = 4
_argument$ = 20						; size = 4
_errmsg$ = 24						; size = 4
?sqlite3_exec@@YAHHHP6AHHHHH@ZHH@Z PROC			; sqlite3_exec
; File C:\Users\libit\source\repos\SQLite_20\SQLite_20\SQLite_20.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 24
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@sqlite3_ex
$LN2@sqlite3_ex:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@sqlite3_ex:
	cmp	DWORD PTR _i$1[ebp], 3
	jae	SHORT $LN3@sqlite3_ex
; Line 26
	push	4
	push	3
	push	2
	push	1
	call	?c_f@@YAHHHHH@Z				; c_f
	add	esp, 16					; 00000010H
; Line 27
	jmp	SHORT $LN2@sqlite3_ex
$LN3@sqlite3_ex:
; Line 28
	xor	eax, eax
; Line 29
	mov	esp, ebp
	pop	ebp
	ret	0
?sqlite3_exec@@YAHHHP6AHHHHH@ZHH@Z ENDP			; sqlite3_exec
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_c$ = 16						; size = 4
_d$ = 20						; size = 4
?c_f@@YAHHHHH@Z PROC					; c_f
; File C:\Users\libit\source\repos\SQLite_20\SQLite_20\SQLite_20.cpp
; Line 18
	push	ebp
	mov	ebp, esp
; Line 19
	mov	eax, DWORD PTR _d$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _b$[ebp]
	push	edx
	mov	eax, DWORD PTR _a$[ebp]
	push	eax
	call	?e_f@@YGHHHHH@Z				; e_f
; Line 20
	pop	ebp
	ret	0
?c_f@@YAHHHHH@Z ENDP					; c_f
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_c$ = 16						; size = 4
_d$ = 20						; size = 4
?e_f@@YGHHHHH@Z PROC					; e_f
; File C:\Users\libit\source\repos\SQLite_20\SQLite_20\SQLite_20.cpp
; Line 11
	push	ebp
	mov	ebp, esp
; Line 12
	mov	eax, DWORD PTR ?index@@3HA		; index
	add	eax, 1
	mov	DWORD PTR ?index@@3HA, eax		; index
; Line 13
	mov	ecx, DWORD PTR _d$[ebp]
	push	ecx
	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?index@@3HA		; index
	push	edx
	push	OFFSET $SG5563
	call	_printf
	add	esp, 24					; 00000018H
; Line 14
	xor	eax, eax
; Line 15
	pop	ebp
	ret	16					; 00000010H
?e_f@@YGHHHHH@Z ENDP					; e_f
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
